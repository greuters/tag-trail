[eaternity]
# Configuration for eaternity API
valid_units = kg, g, l, cl, ml
valid_production_ids = standard, greenhouse, organic, fair-trade, farm, wild-caught, sustainable-fish
valid_transpord_ids = air, ground
valid_conservation_ids = fresh, frozen, dried, conserved, canned, boiled-down

[products]
# products.csv
prefix_rows = 
    Previous Quantity Date
    Expected Quantity Date
    Inventory Quantity Date
column_headers =
    Name
    Amount
    Unit [${eaternity:valid_units}]
    Purchase Price
    Previous Quantity
    Added Quantity
    Sold Quantity
    Expected Quantity
    Inventory Quantity
    Eaternity Name
    Origin [country]
    Production [${eaternity:valid_production_ids}]
    Transport [${eaternity:valid_transpord_ids}]
    Conservation [${eaternity:valid_conservation_ids}]

[members]
# members.csv
prefix_rows =
    Kontostand am
column_headers =
    memberId
    name
    emails
    Kontostand

[bills]
# bills (3_bills/{member.id}.csv)
# TODO add climate price when ready
text_representation_header = Produkt: #Kleberli x Einheitspreis [${general:currency}] = Total [${general:currency}]
text_representation_footer = Total: {totalPrice} ${general:currency}
prefix_rows =
    memberId
    Previous Accounting Date
    Current Accounting Date
    Previous Balance [${general:currency}]
    Total Payments [${general:currency}]
    Correction Transaction [${general:currency}]
    Reason for correction
    Total Price [${general:currency}]
    Current Balance [${general:currency}]
column_headers =
    productId
    description
    numTags
    unitPrice
    totalProductPrice

[member_accounts]
# member accounts to be imported in GnuCash
# 4_gnucash/accounts.csv
account_prefix = Fremdkapital:Guthaben Mitglieder:
type = LIABILITY
commodityn = CURRENCY
hidden = F
tax = F
place_holder = F
prefix_rows =
column_headers =
    type
    full_name
    name
    code
    description
    color
    notes
    commoditym
    commodityn
    hidden
    tax
    place_holder

[gnucash_transactions]
# transactions to be imported to GnuCash
# 4_gnucash/gnucashTransactions.csv
prefix_rows =
column_headers =
    Date
    Description
    Account
    Withdrawal
    Transfer Account

[correction_transactions]
# 0_input/correctionTransactions.csv
prefix_rows =
column_headers =
    memberId
    Amount
    Justification

[postfinance_transactions]
# 0_input/export_Transactions_yyyyMMdd_yyyyMMdd.csv
# Note: this format is prescribed from postfinance.ch
#       you'll likely also need to change the code of 
#       database.PostfinanceTransactionList to adapt to another bank
date_format = '%Y-%m-%d'
filename_date_format = '%Y%m%d'
expected_entry_type = 'All bookings'
prefix_rows =
    Date from:
    Date to:
    Entry type:
    Account:
    Currency:
column_headers =
    Booking date
    Notification text
    Credit in ${general:currency}
    Debit in ${general:currency}
    Value
    Balance in ${general:currency}

[tagtrail_send]
mail_user = 'info@speichaer.ch'
mail_host = 'mail.cyon.ch'
smtp_port = 465
imap_port = 993

[tagtrail_account]
merchandise_value_account = Warenwert
merchandise_value = Warenwert
margin_account = Marge
margin = Marge
inventory_difference_account = Inventurdifferenz
inventory_difference = Inventurdifferenz

[tagtrail_bankimport]
checking_account = Girokonto

[tagtrail_ocr]
# relative coordinates (0, 1) of each of the four potential sheets on a scan
# x0, y0, x1, y1
# samsung galaxy S4
#sheet0_coordinates = 0, 0, .5, .5
#sheet1_coordinates = .5, 0, 1, .5
#sheet2_coordinates = 0, .5, .5, 1
#sheet3_coordinates = .5, .5, 1, 1

# samsung galaxy S6
sheet0_coordinates = 0, .02, .5, .44
sheet1_coordinates = .5, .02, 1, .44
sheet2_coordinates = 0, .44, .5, .84
sheet3_coordinates = .5, .44, 1, .84

[tagtrail_gen]
max_num_pages_per_product = 9
page_number_string = Blatt {pageNumber}

[general]
product_margin_percentage = 0.05
currency = CHF
our_iban = 'CH3609000000890399940'
liquidity_threshold = 100
password_file_path = './config/credentials.cfg'
